row_price=as.numeric(str_replace_all(str_sub(unlist(str_extract_all(price[i],regex.all)),3,-5),',',''))
estate[nrow(estate)+1,] = c(row_address,row_place,row_price)
}
warnings
warnings()
View(estate)
estate = data.frame(address = characters(),place=characters(),price=numeric())
estate = data.frame(address = character(),place=character(),price=numeric())
estate[1,]=c("df","dd",1)
estate
typeof(row_place)
estate[1,]<-c("df","dd",1)
View(estate)
estate = data.frame(address = character(),place=character(),price=numeric(),stringsAsFactors = F)
link = paste(filepath,"/",as.character(num),".html",sep='')
doc = htmlTreeParse(link,encoding = "UTF-8")
whole = doc$children$html[[2]]
whole = whole[[17]]
doc.content = getNodeSet(whole,path="//tr")
address = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[5])
place =  sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[7])
price = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[12])
for(i in 1:100)
{
row_address=str_sub(unlist(str_extract_all(address[i],regex.all)),2,-5)
row_place=str_sub(unlist(str_extract_all(place[i],regex.all)),2,-5)
row_price=as.numeric(str_replace_all(str_sub(unlist(str_extract_all(price[i],regex.all)),3,-5),',',''))
estate[nrow(estate)+1,] <- c(row_address,row_place,row_price)
}
View(estate)
num=2
link = paste(filepath,"/",as.character(num),".html",sep='')
doc = htmlTreeParse(link,encoding = "UTF-8")
whole = doc$children$html[[2]]
whole = whole[[17]]
doc.content = getNodeSet(whole,path="//tr")
address = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[5])
place =  sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[7])
price = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[12])
for(i in 1:100)
{
row_address=str_sub(unlist(str_extract_all(address[i],regex.all)),2,-5)
row_place=str_sub(unlist(str_extract_all(place[i],regex.all)),2,-5)
row_price=as.numeric(str_replace_all(str_sub(unlist(str_extract_all(price[i],regex.all)),3,-5),',',''))
estate[nrow(estate)+1,] <- c(row_address,row_place,row_price)
}
View(estate)
estate = data.frame(address = character(),place=character(),price=numeric(),stringsAsFactors = F)
regex.all = ">.+(</td)"
regex.price =
for (num in 1:60)
estate = data.frame(address = character(),place=character(),price=numeric(),stringsAsFactors = F)
regex.all = ">.+(</td)"
for (num in 1:60)
{
link = paste(filepath,"/",as.character(num),".html",sep='')
doc = htmlTreeParse(link,encoding = "UTF-8")
whole = doc$children$html[[2]]
whole = whole[[17]]
doc.content = getNodeSet(whole,path="//tr")
address = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[5])
place =  sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[7])
price = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[12])
for(i in 1:100)
{
row_address=str_sub(unlist(str_extract_all(address[i],regex.all)),2,-5)
row_place=str_sub(unlist(str_extract_all(place[i],regex.all)),2,-5)
row_price=as.numeric(str_replace_all(str_sub(unlist(str_extract_all(price[i],regex.all)),3,-5),',',''))
estate[nrow(estate)+1,] <- c(row_address,row_place,row_price)
}
}
{
link = paste(filepath,"/",as.character(num),".html",sep='')
doc = htmlTreeParse(link,encoding = "UTF-8")
whole = doc$children$html[[2]]
whole = whole[[17]]
doc.content = getNodeSet(whole,path="//tr")
address = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[5])
place =  sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[7])
price = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[12])
for(i in 1:100)
{
row_address=str_sub(unlist(str_extract_all(address[i],regex.all)),2,-5)
row_place=str_sub(unlist(str_extract_all(place[i],regex.all)),2,-5)
row_price=as.numeric(str_replace_all(str_sub(unlist(str_extract_all(price[i],regex.all)),3,-5),',',''))
estate[nrow(estate)+1,] <- c(row_address,row_place,row_price)
}
}
i
View(estate)
estate = data.frame(address = character(),place=character(),price=numeric(),stringsAsFactors = F)
regex.all = ">.+(</td)"
for (num in 1:60)
{
link = paste(filepath,"/",as.character(num),".html",sep='')
doc = htmlTreeParse(link,encoding = "UTF-8")
whole = doc$children$html[[2]]
whole = whole[[17]]
doc.content = getNodeSet(whole,path="//tr")
address = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[5])
place =  sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[7])
price = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[12])
for(i in 1:100)
{
row_address=str_sub(unlist(str_extract_all(address[i],regex.all)),2,-5)
row_place=str_sub(unlist(str_extract_all(place[i],regex.all)),2,-5)
row_price=as.numeric(str_replace_all(str_sub(unlist(str_extract_all(price[i],regex.all)),3,-5),',',''))
estate[nrow(estate)+1,] <- c(row_address,row_place,row_price)
}
}
estate = data.frame(address = character(),place=character(),price=numeric(),stringsAsFactors = F)
regex.all = ">.+(</td)"
for (num in 1:60)
{
link = paste(filepath,"/",as.character(num),".html",sep='')
doc = htmlTreeParse(link,encoding = "UTF-8")
whole = doc$children$html[[2]]
whole = whole[[17]]
doc.content = getNodeSet(whole,path="//tr")
address = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[5])
place =  sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[7])
price = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[12])
for(i in 1:100)
{
row_address=str_sub(unlist(str_extract_all(address[i],regex.all)),2,-5)
row_place=str_sub(unlist(str_extract_all(place[i],regex.all)),2,-5)
row_price=as.numeric(str_replace_all(str_sub(unlist(str_extract_all(price[i],regex.all)),3,-5),',',''))
estate[nrow(estate)+1,] <- c(row_address,row_place,row_price)
}
}
View(estate)
estate = data.frame(address = character(),place=character(),price=numeric(),stringsAsFactors = F)
regex.all = ">.+(</td)"
for (num in 1:57)
{
link = paste(filepath,"/",as.character(num),".html",sep='')
doc = htmlTreeParse(link,encoding = "UTF-8")
whole = doc$children$html[[2]]
whole = whole[[17]]
doc.content = getNodeSet(whole,path="//tr")
address = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[5])
place =  sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[7])
price = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[12])
for(i in 1:100)
{
row_address=str_sub(unlist(str_extract_all(address[i],regex.all)),2,-5)
row_place=str_sub(unlist(str_extract_all(place[i],regex.all)),2,-5)
row_price=as.numeric(str_replace_all(str_sub(unlist(str_extract_all(price[i],regex.all)),3,-5),',',''))
estate[nrow(estate)+1,] <- c(row_address,row_place,row_price)
}
}
View(estate)
estate = data.frame(address = character(),place=character(),price=numeric(),stringsAsFactors = F)
regex.all = ">.+(</td)"
for (num in 1:56)
{
link = paste(filepath,"/",as.character(num),".html",sep='')
doc = htmlTreeParse(link,encoding = "UTF-8")
whole = doc$children$html[[2]]
whole = whole[[17]]
doc.content = getNodeSet(whole,path="//tr")
address = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[5])
place =  sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[7])
price = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[12])
for(i in 1:100)
{
row_address=str_sub(unlist(str_extract_all(address[i],regex.all)),2,-5)
row_place=str_sub(unlist(str_extract_all(place[i],regex.all)),2,-5)
row_price=as.numeric(str_replace_all(str_sub(unlist(str_extract_all(price[i],regex.all)),3,-5),',',''))
estate[nrow(estate)+1,] <- c(row_address,row_place,row_price)
}
}
warnings()
View(estate)
length(estate$price[5174])
estate$price[5174]
estate$price[5174]==NA
is.na(estate$price)
is.na(estate$price[5174])
estate = data.frame(address = character(),place=character(),price=numeric(),stringsAsFactors = F)
regex.all = ">.+(</td)"
for (num in 1:56)
{
link = paste(filepath,"/",as.character(num),".html",sep='')
doc = htmlTreeParse(link,encoding = "UTF-8")
whole = doc$children$html[[2]]
whole = whole[[17]]
doc.content = getNodeSet(whole,path="//tr")
address = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[5])
place =  sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[7])
price = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[12])
for(i in 1:100)
{
row_address=str_sub(unlist(str_extract_all(address[i],regex.all)),2,-5)
row_place=str_sub(unlist(str_extract_all(place[i],regex.all)),2,-5)
row_price=as.numeric(str_replace_all(str_sub(unlist(str_extract_all(price[i],regex.all)),3,-5),',',''))
if(!is.na(row_price))
{
estate[nrow(estate)+1,] <- c(row_address,row_place,row_price)
}
}
}
warnings
warnings()
View(estate)
length(which(is.na(estate$price))
)
length(which(is.na(estate$price)))
length(which(is.na(estate$place)))
length(which(is.na(estate$address)))
write.csv(crime,file = "crimes.csv")
crime <- read_csv("crimes.csv")
crime = crime[,2:length(crime)]
View(crime)
write.csv(estate,file = "estate.csv")
estate <- read_csv("estate.csv")
estate = estate[,2:length(estate)]
View(estate)
estate[1]
estate[1,]
estate[3511,]
a = double()
a = 1.22444
a
estate = data.frame(address = character(),place=character(),price=double(),stringsAsFactors = F)
regex.all = ">.+(</td)"
for (num in 1:56)
{
link = paste(filepath,"/",as.character(num),".html",sep='')
doc = htmlTreeParse(link,encoding = "UTF-8")
whole = doc$children$html[[2]]
whole = whole[[17]]
doc.content = getNodeSet(whole,path="//tr")
address = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[5])
place =  sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[7])
price = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[12])
for(i in 1:100)
{
row_address=str_sub(unlist(str_extract_all(address[i],regex.all)),2,-5)
row_place=str_sub(unlist(str_extract_all(place[i],regex.all)),2,-5)
row_price=as.double(str_replace_all(str_sub(unlist(str_extract_all(price[i],regex.all)),3,-5),',',''))
if(!is.na(row_price))
{
estate[nrow(estate)+1,] <- c(row_address,row_place,row_price)
}
}
}
write.csv(estate,file = "estate.csv")
estate <- read_csv("estate.csv")
estate = estate[,2:length(estate)]
estate[3511,]
estate$price[3511] = 0.95e8
estate[3511,]
estate$price[4709] = 0.4e7
estate[4709,]
estate$price[3511] = .95e8
estate$price[4709] = 0.4e7
estate[3511,]
estate$price[4709] = .4e7
estate[4709,]
estate$price[3511] = .95e+8
estate$price[3511] = .95e8
write.csv(estate,file = "estate.csv")
estate <- read_csv("estate.csv")
estate = estate[,2:length(estate)]
estate$price[3511] = .95e8
estate$price[4709] = .4e7
estate = data.frame(address = character(),place=character(),price=double(),stringsAsFactors = F)
regex.all = ">.+(</td)"
for (num in 1:56)
{
link = paste(filepath,"/",as.character(num),".html",sep='')
doc = htmlTreeParse(link,encoding = "UTF-8")
whole = doc$children$html[[2]]
whole = whole[[17]]
doc.content = getNodeSet(whole,path="//tr")
address = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[5])
place =  sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[7])
price = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[12])
for(i in 1:100)
{
row_address=str_sub(unlist(str_extract_all(address[i],regex.all)),2,-5)
row_place=str_sub(unlist(str_extract_all(place[i],regex.all)),2,-5)
row_price=as.double(str_replace_all(str_sub(unlist(str_extract_all(price[i],regex.all)),3,-5),',',''))
if(!is.na(row_price))
{
estate[nrow(estate)+1,] <- c(row_address,row_place,row_price)
}
}
}
View(estate)
write.csv(estate,file = "estate.csv")
estate <- read_csv("estate.csv")
estate = estate[,2:length(estate)]
estate$price[3511] = 9.95e8
estate$price[4709] = 6.4e7
View(estate)
mode = 0; #Need to Calculate data
mode = 1; #Already finished with data
this.dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(this.dir)
datapath= paste(this.dir,c("/rdata"),sep = "")
filepath = paste(this.dir,c("/file"),sep = "")
if(!dir.exists("rdata"))
{
directory= paste(this.dir,c("/rdata"),sep = "")
dir.create(directory)
setwd(datapath)
dcmap = get_map("Washington DC",zoom=12,maptype="terrain",source = "osm")
save(dcmap,file = "dcmap.Rdata")
}
setwd(datapath)
load("dcmap.Rdata")
ggmap(dcmap)
setwd(filepath)
crime <- read_csv("crimes.csv")
crime = crime[,2:length(crime)]
estate <- read_csv("estate.csv")
estate = estate[,2:length(estate)]
estate$price[3511] = 9.95e8
estate$price[4709] = 6.4e7
somePlace <-ggmap::geocode("Washington,DC")
leaflet(somePlace) %>% addTiles() %>%
addTiles() %>% addMarkers()
if(mode==0)
{
dummy = sapply(1:3306,function(i){
tmp = geocode(paste(crime$BLOCK[i],"Washington DC USA"),output="latlon")
crime$lon[i] <<- tmp$lon
crime$lat[i] <<- tmp$lat
return(tmp)
})
#Convert Day and Night for Date ( So 7:00 AM to 7:00 PM are defined as Day where daylight is available)
#crime$Day_Night = " "
regex.time = "(\\d){1,2}(:(\\d){1,2})(:(\\d){1,2})"
regex.ampm = "(AM|PM)"
dummy = sapply(1:3306,function(i){
hour = str_sub(unlist(str_extract_all(crime$REPORT_DAT[i],regex.time)),1,-7)
ampm = unlist(str_extract_all(crime$REPORT_DAT[i],regex.ampm))
if(ampm=="PM")
{
ifelse(as.numeric(hour)<7,crime$Day_Night[i] <<-"DAY",crime$Day_Night[i] <<- "NIGHT")
}else#AM
{
ifelse(as.numeric(hour)> 7,crime$Day_Night[i] <<-"DAY",crime$Day_Night[i] <<- "NIGHT")
}
})
write.csv(crime,file = "crimes.csv")
## Real estate price, 56 html files
estate = data.frame(address = character(),place=character(),price=double(),stringsAsFactors = F)
regex.all = ">.+(</td)"
for (num in 1:56)
{
link = paste(filepath,"/",as.character(num),".html",sep='')
doc = htmlTreeParse(link,encoding = "UTF-8")
whole = doc$children$html[[2]]
whole = whole[[17]]
doc.content = getNodeSet(whole,path="//tr")
address = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[5])
place =  sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[7])
price = sapply(7:106, function(i) capture.output(doc.content[[i]],file = NULL)[12])
for(i in 1:100)
{
row_address=str_sub(unlist(str_extract_all(address[i],regex.all)),2,-5)
row_place=str_sub(unlist(str_extract_all(place[i],regex.all)),2,-5)
row_price=as.double(str_replace_all(str_sub(unlist(str_extract_all(price[i],regex.all)),3,-5),',',''))
if(!is.na(row_price))
{
estate[nrow(estate)+1,] <- c(row_address,row_place,row_price)
}
}
}
write.csv(estate,file = "estate.csv")
}
mode = 0; #Need to Calculate data
mode = 1; #Already finished with data
this.dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(this.dir)
datapath= paste(this.dir,c("/rdata"),sep = "")
filepath = paste(this.dir,c("/file"),sep = "")
if(!dir.exists("rdata"))
{
directory= paste(this.dir,c("/rdata"),sep = "")
dir.create(directory)
setwd(datapath)
dcmap = get_map("Washington DC",zoom=12,maptype="terrain",source = "osm")
save(dcmap,file = "dcmap.Rdata")
}
setwd(datapath)
load("dcmap.Rdata")
ggmap(dcmap)
setwd(filepath)
if(mode==1)
{
crime <- read_csv("crimes.csv")
crime = crime[,2:length(crime)]
estate <- read_csv("estate.csv")
estate = estate[,2:length(estate)]
estate$price[3511] = 9.95e8
estate$price[4709] = 6.4e7
#crime$lon = 0;crime$lat = 0;
}
estate$lon = 0;estate$lat = 0;
write.csv(estate,file = "estate.csv")
mode = 1; #Already finished with data
setwd(filepath)
if(mode==1)
}
if(mode==1)
{
crime <- read_csv("crimes.csv")
crime = crime[,2:length(crime)]
estate <- read_csv("estate.csv")
estate = estate[,2:length(estate)]
estate$price[3511] = 9.95e8
estate$price[4709] = 6.4e7
#estate$lon = 0;estate$lat = 0;
}
View(estate)
dummy = sapply(1:100,function(i){
tmp = geocode(paste(estate$address[i],"Washington DC USA"),output="latlon")
estate$lon[i] <<- tmp$lon
estate$lat[i] <<- tmp$lat
return(tmp)
})
View(estate)
write.csv(estate,file = "estate.csv")
estate <- read_csv("estate.csv")
estate = estate[,2:length(estate)]
estate$price[3511] = 9.95e8
estate$price[4709] = 6.4e7
View(estate)
dummy = sapply(101:2000,function(i){
tmp = geocode(paste(estate$address[i],"Washington DC USA"),output="latlon")
estate$lon[i] <<- tmp$lon
estate$lat[i] <<- tmp$lat
return(tmp)
})
View(estate)
write.csv(estate,file = "estate.csv")
estate <- read_csv("estate.csv")
estate = estate[,2:length(estate)]
estate$price[3511] = 9.95e8
estate$price[4709] = 6.4e7
View(estate)
View(estate)
View(estate)
View(estate)
estate1 <- read_csv("estate1.csv")
estate1 = estate1[,2:length(estate)]
estate1$price[3511] = 9.95e8
estate1$price[4709] = 6.4e7
View(estate1)
estate <- read_csv("estate.csv")
estate$price[3511] = 9.95e8
estate$price[4709] = 6.4e7
View(estate1)
estate1 <- read_csv("estate1.csv")
estate1$price[3511] = 9.95e8
estate1$price[4709] = 6.4e7
View(estate1)
for(i in 2001:3988)
{
estate$lon[i]  = estate1$lon[i]
estate$lat[i] = estate1$lat[i]
}
write.csv(estate,file = "estate.csv")
estate <- read_csv("estate.csv")
estate = estate[,2:length(estate)]
estate$price[3511] = 9.95e8
estate$price[4709] = 6.4e7
dummy = sapply(3989:4000,function(i){
tmp = geocode(paste(estate$address[i],"Washington DC USA"),output="latlon")
estate$lon[i] <<- tmp$lon
estate$lat[i] <<- tmp$lat
return(tmp)
})
write.csv(estate,file = "estate.csv")
estate <- read_csv("estate.csv")
estate = estate[,2:length(estate)]
estate$price[3511] = 9.95e8
estate$price[4709] = 6.4e7
estate2 <- read_csv("estate2.csv")
estate2$price[3511] = 9.95e8
estate2$price[4709] = 6.4e7
View(estate2)
View(estate)
for(i in 5001:5573)
{
estate$lon[i]  = estate2$lon[i]
estate$lat[i] = estate2$lat[i]
}
write.csv(estate,file = "estate.csv")
estate <- read_csv("estate.csv")
estate = estate[,2:length(estate)]
estate$price[3511] = 9.95e8
estate$price[4709] = 6.4e7
View(estate)
estate3 <- read_csv("estate3.csv")
estate3$price[3511] = 9.95e8
estate3$price[4709] = 6.4e7
View(estate3)
for(i in 4001:5000)
{
estate$lon[i]  = estate3$lon[i]
estate$lat[i] = estate3$lat[i]
}
write.csv(estate,file = "estate.csv")
estate <- read_csv("estate.csv")
estate = estate[,2:length(estate)]
estate$price[3511] = 9.95e8
estate$price[4709] = 6.4e7
