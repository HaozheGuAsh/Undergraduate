content <-as.vector(na.omit(unlist(read_delim(filename,"\t", escape_double = FALSE, col_names = FALSE,trim_ws = TRUE))))
model = unlist(str_extract_all(content,regex.model))
vin = str_sub(unlist(str_extract_all(content,regex.vin)),6)
price = unlist(str_extract_all(content,regex.price))
mileage = str_sub(unlist(str_extract_all(content,regex.mileage)),14)
if(grepl("Body",unlist(str_extract_all(content,regex.color))))
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1,-5)
}else if (grepl("Transmission",unlist(str_extract_all(content,regex.color))))
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1,-13)
}else
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1)
}
transmission = ifelse(grepl("Engine",unlist(str_extract_all(content,regex.transmission))),
str_sub(unlist(str_extract_all(content,regex.transmission)),15,-7),str_sub(unlist(str_extract_all(content,regex.transmission)),15))
engine_displacement = ifelse(grepl("L",unlist(str_extract_all(content,regex.engine))),
str_sub(unlist(str_extract_all(content,regex.engine)),9,-2),str_sub(unlist(str_extract_all(content,regex.engine)),9))
seller =  str_sub(unlist(str_extract_all(content,regex.seller)),13)
address = ifelse(grepl("Phone",unlist(str_extract_all(content,regex.address))),
str_sub(unlist(str_extract_all(content,regex.address)),10,-6),str_sub(unlist(str_extract_all(content,regex.address)),10))
phone = str_sub(unlist(str_extract_all(content,regex.phone)),8)
website = str_sub(unlist(str_extract_all(content,regex.website)),10,-8)
output[i,]<<-c(emp(filelist[i]),emp(model),emp(vin),emp(price),emp(mileage),emp(color),emp(transmission),emp(engine_displacement)
,emp(seller),emp(address),emp(phone),emp(website))
})
View(Q1)
file.remove("Q1.csv")
write.csv(output,file = "Q1.csv")
Q1 <- read_csv("Q1.csv")
View(Q1)
file.remove("Q1.csv")
dummy = sapply(1:length(filelist),function(i)
{
if(i==77)
{
print("dfd")
}
filename = paste(directory,"/",filelist[i],sep = "")
content <-as.vector(na.omit(unlist(read_delim(filename,"\t", escape_double = FALSE, col_names = FALSE,trim_ws = TRUE))))
model = unlist(str_extract_all(content,regex.model))
vin = str_sub(unlist(str_extract_all(content,regex.vin)),6)
price = unlist(str_extract_all(content,regex.price))
mileage = str_sub(unlist(str_extract_all(content,regex.mileage)),14)
if(grepl("Body",unlist(str_extract_all(content,regex.color))))
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1,-5)
}else if (grepl("Transmission",unlist(str_extract_all(content,regex.color))))
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1,-13)
}else
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1)
}
transmission = ifelse(grepl("Engine",unlist(str_extract_all(content,regex.transmission))),
str_sub(unlist(str_extract_all(content,regex.transmission)),15,-7),str_sub(unlist(str_extract_all(content,regex.transmission)),15))
engine_displacement = ifelse(grepl("L",unlist(str_extract_all(content,regex.engine))),
str_sub(unlist(str_extract_all(content,regex.engine)),9,-2),str_sub(unlist(str_extract_all(content,regex.engine)),9))
seller =  str_sub(unlist(str_extract_all(content,regex.seller)),13)
address = ifelse(grepl("Phone",unlist(str_extract_all(content,regex.address))),
str_sub(unlist(str_extract_all(content,regex.address)),10,-6),str_sub(unlist(str_extract_all(content,regex.address)),10))
phone = str_sub(unlist(str_extract_all(content,regex.phone)),8)
website = str_sub(unlist(str_extract_all(content,regex.website)),10,-8)
output[i,]<<-c(emp(filelist[i]),emp(model),emp(vin),emp(price),emp(mileage),emp(color),emp(transmission),emp(engine_displacement)
,emp(seller),emp(address),emp(phone),emp(website))
})
dummy = sapply(1:length(filelist),function(i)
{
if(i==76)
{
print("dfd")
}
filename = paste(directory,"/",filelist[i],sep = "")
content <-as.vector(na.omit(unlist(read_delim(filename,"\t", escape_double = FALSE, col_names = FALSE,trim_ws = TRUE))))
model = unlist(str_extract_all(content,regex.model))
vin = str_sub(unlist(str_extract_all(content,regex.vin)),6)
price = unlist(str_extract_all(content,regex.price))
mileage = str_sub(unlist(str_extract_all(content,regex.mileage)),14)
if(grepl("Body",unlist(str_extract_all(content,regex.color))))
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1,-5)
}else if (grepl("Transmission",unlist(str_extract_all(content,regex.color))))
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1,-13)
}else
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1)
}
transmission = ifelse(grepl("Engine",unlist(str_extract_all(content,regex.transmission))),
str_sub(unlist(str_extract_all(content,regex.transmission)),15,-7),str_sub(unlist(str_extract_all(content,regex.transmission)),15))
engine_displacement = ifelse(grepl("L",unlist(str_extract_all(content,regex.engine))),
str_sub(unlist(str_extract_all(content,regex.engine)),9,-2),str_sub(unlist(str_extract_all(content,regex.engine)),9))
seller =  str_sub(unlist(str_extract_all(content,regex.seller)),13)
address = ifelse(grepl("Phone",unlist(str_extract_all(content,regex.address))),
str_sub(unlist(str_extract_all(content,regex.address)),10,-6),str_sub(unlist(str_extract_all(content,regex.address)),10))
phone = str_sub(unlist(str_extract_all(content,regex.phone)),8)
website = str_sub(unlist(str_extract_all(content,regex.website)),10,-8)
output[i,]<<-c(emp(filelist[i]),emp(model),emp(vin),emp(price),emp(mileage),emp(color),emp(transmission),emp(engine_displacement)
,emp(seller),emp(address),emp(phone),emp(website))
})
dummy = sapply(1:length(filelist),function(i)
{
if(i==77)
{
print("dfd")
}
filename = paste(directory,"/",filelist[i],sep = "")
content <-as.vector(na.omit(unlist(read_delim(filename,"\t", escape_double = FALSE, col_names = FALSE,trim_ws = TRUE))))
model = unlist(str_extract_all(content,regex.model))
vin = str_sub(unlist(str_extract_all(content,regex.vin)),6)
price = unlist(str_extract_all(content,regex.price))
mileage = str_sub(unlist(str_extract_all(content,regex.mileage)),14)
if(grepl("Body",unlist(str_extract_all(content,regex.color))))
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1,-5)
}else if (grepl("Transmission",unlist(str_extract_all(content,regex.color))))
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1,-13)
}else
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1)
}
transmission = ifelse(grepl("Engine",unlist(str_extract_all(content,regex.transmission))),
str_sub(unlist(str_extract_all(content,regex.transmission)),15,-7),str_sub(unlist(str_extract_all(content,regex.transmission)),15))
engine_displacement = ifelse(grepl("L",unlist(str_extract_all(content,regex.engine))),
str_sub(unlist(str_extract_all(content,regex.engine)),9,-2),str_sub(unlist(str_extract_all(content,regex.engine)),9))
seller =  str_sub(unlist(str_extract_all(content,regex.seller)),13)
address = ifelse(grepl("Phone",unlist(str_extract_all(content,regex.address))),
str_sub(unlist(str_extract_all(content,regex.address)),10,-6),str_sub(unlist(str_extract_all(content,regex.address)),10))
phone = str_sub(unlist(str_extract_all(content,regex.phone)),8)
website = str_sub(unlist(str_extract_all(content,regex.website)),10,-8)
output[i,]<<-c(emp(filelist[i]),emp(model),emp(vin),emp(price),emp(mileage),emp(color),emp(transmission),emp(engine_displacement)
,emp(seller),emp(address),emp(phone),emp(website))
})
debugSource('C:/Users/Ash/Google Drive/Undergraduate/Junior & Senior/Fall 2016/STA 141/HW4/sta141_hw4.R', echo=TRUE)
debugSource('C:/Users/Ash/Google Drive/Undergraduate/Junior & Senior/Fall 2016/STA 141/HW4/sta141_hw4.R', echo=TRUE)
debugSource('C:/Users/Ash/Google Drive/Undergraduate/Junior & Senior/Fall 2016/STA 141/HW4/sta141_hw4.R', echo=TRUE)
emp<-function(x)
{
if(length(x)==0)
{
x = NA
}
if(length(x)>1)
{
x = x[1]
}
return(x)
}
dummy = sapply(1:length(filelist),function(i)
{
filename = paste(directory,"/",filelist[i],sep = "")
content <-as.vector(na.omit(unlist(read_delim(filename,"\t", escape_double = FALSE, col_names = FALSE,trim_ws = TRUE))))
model = unlist(str_extract_all(content,regex.model))
vin = str_sub(unlist(str_extract_all(content,regex.vin)),6)
price = unlist(str_extract_all(content,regex.price))
mileage = str_sub(unlist(str_extract_all(content,regex.mileage)),14)
if(grepl("Body",unlist(str_extract_all(content,regex.color))))
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1,-5)
}else if (grepl("Transmission",unlist(str_extract_all(content,regex.color))))
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1,-13)
}else
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1)
}
transmission = ifelse(grepl("Engine",unlist(str_extract_all(content,regex.transmission))),
str_sub(unlist(str_extract_all(content,regex.transmission)),15,-7),str_sub(unlist(str_extract_all(content,regex.transmission)),15))
engine_displacement = ifelse(grepl("L",unlist(str_extract_all(content,regex.engine))),
str_sub(unlist(str_extract_all(content,regex.engine)),9,-2),str_sub(unlist(str_extract_all(content,regex.engine)),9))
seller =  str_sub(unlist(str_extract_all(content,regex.seller)),13)
address = ifelse(grepl("Phone",unlist(str_extract_all(content,regex.address))),
str_sub(unlist(str_extract_all(content,regex.address)),10,-6),str_sub(unlist(str_extract_all(content,regex.address)),10))
phone = str_sub(unlist(str_extract_all(content,regex.phone)),8)
website = str_sub(unlist(str_extract_all(content,regex.website)),10,-8)
if(i==77)
{
print("dfd")
}
output[i,]<<-c(emp(filelist[i]),emp(model),emp(vin),emp(price),emp(mileage),emp(color),emp(transmission),emp(engine_displacement)
,emp(seller),emp(address),emp(phone),emp(website))
})
write.csv(output,file = "Q1.csv")
Q1 <- read_csv("Q1.csv")
debugSource('C:/Users/Ash/Google Drive/Undergraduate/Junior & Senior/Fall 2016/STA 141/HW4/sta141_hw4.R', echo=TRUE)
emp(filelist[i]),emp(model),emp(vin),emp(price),emp(mileage),emp(color),emp(transmission),emp(engine_displacement)
,emp(seller),emp(address),emp(phone),emp(website)
c(emp(filelist[i]),emp(model),emp(vin),emp(price),emp(mileage),emp(color),emp(transmission),emp(engine_displacement)
,emp(seller),emp(address),emp(phone),emp(website))
debugSource('C:/Users/Ash/Google Drive/Undergraduate/Junior & Senior/Fall 2016/STA 141/HW4/sta141_hw4.R', echo=TRUE)
debugSource('C:/Users/Ash/Google Drive/Undergraduate/Junior & Senior/Fall 2016/STA 141/HW4/sta141_hw4.R', echo=TRUE)
unlist(str_extract_all(content,regex.color))
grepl("Body",unlist(str_extract_all(content,regex.color)))
source('C:/Users/Ash/Google Drive/Undergraduate/Junior & Senior/Fall 2016/STA 141/HW4/sta141_hw4.R', echo=TRUE)
dummy = sapply(1:length(filelist),function(i)
{
filename = paste(directory,"/",filelist[i],sep = "")
content <-as.vector(na.omit(unlist(read_delim(filename,"\t", escape_double = FALSE, col_names = FALSE,trim_ws = TRUE))))
model = unlist(str_extract_all(content,regex.model))
vin = str_sub(unlist(str_extract_all(content,regex.vin)),6)
price = unlist(str_extract_all(content,regex.price))
mileage = str_sub(unlist(str_extract_all(content,regex.mileage)),14)
if(i==77)
{
print("dfd")
}
if(grepl("Body",emp(unlist(str_extract_all(content,regex.color)))))
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1,-5)
}else if (grepl("Transmission",emp(unlist(str_extract_all(content,regex.color)))))
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1,-13)
}else
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1)
}
transmission = ifelse(grepl("Engine",unlist(str_extract_all(content,regex.transmission))),
str_sub(unlist(str_extract_all(content,regex.transmission)),15,-7),str_sub(unlist(str_extract_all(content,regex.transmission)),15))
engine_displacement = ifelse(grepl("L",unlist(str_extract_all(content,regex.engine))),
str_sub(unlist(str_extract_all(content,regex.engine)),9,-2),str_sub(unlist(str_extract_all(content,regex.engine)),9))
seller =  str_sub(unlist(str_extract_all(content,regex.seller)),13)
address = ifelse(grepl("Phone",unlist(str_extract_all(content,regex.address))),
str_sub(unlist(str_extract_all(content,regex.address)),10,-6),str_sub(unlist(str_extract_all(content,regex.address)),10))
phone = str_sub(unlist(str_extract_all(content,regex.phone)),8)
website = str_sub(unlist(str_extract_all(content,regex.website)),10,-8)
output[i,]<<-c(emp(filelist[i]),emp(model),emp(vin),emp(price),emp(mileage),emp(color),emp(transmission),emp(engine_displacement)
,emp(seller),emp(address),emp(phone),emp(website))
})
write.csv(output,file = "Q1.csv")
Q1 <- read_csv("Q1.csv")
View(Q1)
file.remove("Q1.csv")
regex.seller = "(Offered\\sby:\\s)[a-zA-Z0-9\\s'&]+"
dummy = sapply(1:length(filelist),function(i)
{
filename = paste(directory,"/",filelist[i],sep = "")
content <-as.vector(na.omit(unlist(read_delim(filename,"\t", escape_double = FALSE, col_names = FALSE,trim_ws = TRUE))))
model = unlist(str_extract_all(content,regex.model))
vin = str_sub(unlist(str_extract_all(content,regex.vin)),6)
price = unlist(str_extract_all(content,regex.price))
mileage = str_sub(unlist(str_extract_all(content,regex.mileage)),14)
if(i==77)
{
print("dfd")
}
if(grepl("Body",emp(unlist(str_extract_all(content,regex.color)))))
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1,-5)
}else if (grepl("Transmission",emp(unlist(str_extract_all(content,regex.color)))))
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1,-13)
}else
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1)
}
transmission = ifelse(grepl("Engine",unlist(str_extract_all(content,regex.transmission))),
str_sub(unlist(str_extract_all(content,regex.transmission)),15,-7),str_sub(unlist(str_extract_all(content,regex.transmission)),15))
engine_displacement = ifelse(grepl("L",unlist(str_extract_all(content,regex.engine))),
str_sub(unlist(str_extract_all(content,regex.engine)),9,-2),str_sub(unlist(str_extract_all(content,regex.engine)),9))
seller =  str_sub(unlist(str_extract_all(content,regex.seller)),13)
address = ifelse(grepl("Phone",unlist(str_extract_all(content,regex.address))),
str_sub(unlist(str_extract_all(content,regex.address)),10,-6),str_sub(unlist(str_extract_all(content,regex.address)),10))
phone = str_sub(unlist(str_extract_all(content,regex.phone)),8)
website = str_sub(unlist(str_extract_all(content,regex.website)),10,-8)
output[i,]<<-c(emp(filelist[i]),emp(model),emp(vin),emp(price),emp(mileage),emp(color),emp(transmission),emp(engine_displacement)
,emp(seller),emp(address),emp(phone),emp(website))
})
write.csv(output,file = "Q1.csv")
Q1 <- read_csv("Q1.csv")
View(Q1)
########### Regular Expression ##############################################################
regex.model= "^(\\d{4})[\\s0-9a-zA-Z-]+"
regex.vin = "^(VIN:\\s)[0-9A-Z]{17}"
regex.price = "\\$[\\d,]+"
regex.mileage = "(UsedMileage:\\s)[\\d,]+"
regex.color = "((Exterior:\\s)[0-9-a-zA-Z\\s]+)((Interior:\\s)[0-9-a-zA-Z\\s]+|Body|Transmission)"
regex.transmission = "(Transmission:\\s)[a-zA-Z0-9\\s-]+(Engine)?"
regex.engine = "(Engine:\\s)(\\d)+(.)?(\\d)*(L)?"
regex.seller = "(Offered\\sby:\\s)[a-zA-Z0-9\\s'&]+"
regex.address = "(Address:\\s)[a-zA-Z0-9,\\s]+(Phone)?"
regex.phone = "(Phone:\\s)(\\(\\d{3}\\))(\\s\\d{3})(-\\d{4})"
regex.website = "(Website:\\s)[a-zA-Z0-9.\\/-~]+(Address)"
##############################################################################################
############ Helper Function ################################################################
emp<-function(x)
{
if(length(x)==0)
{
x = NA
}
if(length(x)>1)
{
x = x[1]
}
return(x)
}
##############################################################################################
########## Iteration Through Folder###########################################################
dummy = sapply(1:length(filelist),function(i)
{
filename = paste(directory,"/",filelist[i],sep = "")
content <-as.vector(na.omit(unlist(read_delim(filename,"\t", escape_double = FALSE, col_names = FALSE,trim_ws = TRUE))))
model = unlist(str_extract_all(content,regex.model))
vin = str_sub(unlist(str_extract_all(content,regex.vin)),6)
price = unlist(str_extract_all(content,regex.price))
mileage = str_sub(unlist(str_extract_all(content,regex.mileage)),14)
if(i==77)
{
print("dfd")
}
if(grepl("Body",emp(unlist(str_extract_all(content,regex.color)))))
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1,-5)
}else if (grepl("Transmission",emp(unlist(str_extract_all(content,regex.color)))))
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1,-13)
}else
{
color = str_sub(unlist(str_extract_all(content,regex.color)),1)
}
transmission = ifelse(grepl("Engine",unlist(str_extract_all(content,regex.transmission))),
str_sub(unlist(str_extract_all(content,regex.transmission)),15,-7),str_sub(unlist(str_extract_all(content,regex.transmission)),15))
engine_displacement = ifelse(grepl("L",unlist(str_extract_all(content,regex.engine))),
str_sub(unlist(str_extract_all(content,regex.engine)),9,-2),str_sub(unlist(str_extract_all(content,regex.engine)),9))
seller =  str_sub(unlist(str_extract_all(content,regex.seller)),13)
address = ifelse(grepl("Phone",unlist(str_extract_all(content,regex.address))),
str_sub(unlist(str_extract_all(content,regex.address)),10,-6),str_sub(unlist(str_extract_all(content,regex.address)),10))
phone = str_sub(unlist(str_extract_all(content,regex.phone)),8)
website = str_sub(unlist(str_extract_all(content,regex.website)),10,-8)
output[i,]<<-c(emp(filelist[i]),emp(model),emp(vin),emp(price),emp(mileage),emp(color),emp(transmission),emp(engine_displacement)
,emp(seller),emp(address),emp(phone),emp(website))
})
write.csv(output,file = "Q1.csv")
Q1 <- read_csv("Q1.csv")
View(Q1)
Q1 <- read_csv("Q1.csv")
install.packages("RCurl")
install.packages("RCurl")
install.packages("XML")
library(RCurl)
library(XML)
dplink = "http://anson.ucdavis.edu/~debashis/techrep/techrep.html"
dplink = "http://anson.ucdavis.edu/~debashis/techrep/techrep.html"
dpdoc = htmlTreeParse(dplink)
class(dpdoc)
names(dpdoc)
names(dpdoc$children)
dpdoc$children$comment
dpdoc$children$comment
names.XMLNode(dpdoc$children$html)  # same as names(dpdoc$children$html)
dpdoc.head = dpdoc$children$html[[1]]
dpdoc.body = dpdoc$children$html[[2]]
xmlValue(dpdoc.head)
xmlValue(dpdoc.body)
xmlValue(dpdoc.head)
xmlValue(dpdoc.body)
xmlChildren(dpdoc.head)[["meta"]]
xmlChildren(dpdoc.head)[["title"]]
xmlChildren(dpdoc.head)[[1]]
xmlChildren(dpdoc.head)[[2]]
xmlChildren(dpdoc.head)[[3]]
dpdoc.body[[1]]
dpdoc.body[[2]]
xmlValue(dpdoc.body)
dpdoc.body[[1]]
dpdoc.body[[2]]
dpdoc.body[[3]]
dpdoc.body[[4]]
dpdoc.body[[5]]
xmlvalue(dpdoc.body)
xmlValue(dpdoc.body)
xmlValue(dpdoc.body[[3]])
dpdoc.body[[3]]
dpdoc.body[[2]]
dpdoc.body[[2]]
xmlValue(dpdoc.body[[2]])
dpdoc.body.headers = getNodeSet(dpdoc.body,path="//h1")  # list of headers
dpdoc.body.headers
dpdoc.thesis = dpdoc.body[[2]] # thesis
dpdoc.thesis
dpdoc.body
dpdoc.fields = getNodeSet(dpdoc.body,path="//ul")
dpdoc.fields
dpdoc.links = getHTMLLinks(dplink, externalOnly = TRUE, xpQuery = "//a/@href")
docName(dpdoc)
dpdoc.links = getHTMLLinks(dplink, externalOnly = TRUE, xpQuery = "//a/@href")
dpdoc.links
dodoc.journal.ls = sapply(1:length(dpdoc.jrl.journal), function(i) xmlValue(dpdoc.jrl.journal[[i]]))
dodoc.journal.ls = sapply(1:length(dpdoc.jrl.journal), function(i) xmlValue(dpdoc.jrl.journal[[i]]))
dpdoc.jrl.journal = getNodeSet(dpdoc.jrl,path="//li//i")
dpdoc.jrl.anchor = getNodeSet(dpdoc.jrl,path="//li//a")
dpdoc.fields = getNodeSet(dpdoc.body,path="//ul")
identical(dpdoc.jrl,dpdoc.fields[[2]]) ## TRUE
# extract journal publication information as a list
dpdoc.jrl.pub = getNodeSet(dpdoc.jrl,path="//li")
# extract journal names, volumes, pages of the journal publications
dpdoc.jrl.journal = getNodeSet(dpdoc.jrl,path="//li//i")
dpdoc.jrl.anchor = getNodeSet(dpdoc.jrl,path="//li//a")
dpdoc.fields = getNodeSet(dpdoc.body,path="//ul")
identical(dpdoc.jrl,dpdoc.fields[[2]]) ## TRUE
dpdoc.jrl = dpdoc.body[[5]] # journal publications
identical(dpdoc.jrl,dpdoc.fields[[2]]) ## TRUE
dpdoc.jrl.pub = getNodeSet(dpdoc.jrl,path="//li")
dpdoc.jrl.journal = getNodeSet(dpdoc.jrl,path="//li//i")
dpdoc.jrl.anchor = getNodeSet(dpdoc.jrl,path="//li//a")
docName(dpdoc)
dpdoc.links = getHTMLLinks(dplink, externalOnly = TRUE, xpQuery = "//a/@href")
dpdoc.links
dodoc.journal.ls = sapply(1:length(dpdoc.jrl.journal), function(i) xmlValue(dpdoc.jrl.journal[[i]]))
dodoc.journal.ls
dpdoc.jrl.journal
dpdoc.body[[5]]
dpdoc.jrl.journal
link = "http://anson.ucdavis.edu/~debashis/techrep/techrep.html"
doc = htmlTreeParse(link)
View(doc)
doc
class(doc)
doc$file
doc$children
dd
library(RCurl)
install.packages("RCurl")
install.packages("RCurl")
install.packages("XML")
library(RCurl)
library(XML)
link = "http://anson.ucdavis.edu/~mueller/cveng13.html"
doc = htmlTreeParse(link)
doc.head = doc$children$html[[1]]
doc.body = doc$children$html[[2]]
doc.body
getNodeSet(doc.body,path="//p[@em]")
getNodeSet(doc.body,path="//p")
getNodeSet(doc.body,path="//p//a")
doc.body
getNodeSet(doc.body,path="//p[@em]")
a=getNodeSet(doc.body,path="//p[@em]")
doc.body
a=getNodeSet(doc.body,path="//p[@em]")
a=getNodeSet(doc.body,path="/p[@em]")
a=getNodeSet(doc.head,path="/p")
a
a=getNodeSet(doc.head,path="//title")
a
a=getNodeSet(doc.head,path="/title")
a
a=getNodeSet(doc.head,path="//title")
a
a=getNodeSet(doc.head,path="//style")
a
a=getNodeSet(doc.body,path="//em")
doc = htmlTreeParse(link,encoding = "UTF-8")
doc.head = doc$children$html[[1]]
doc.body = doc$children$html[[2]]
doc.body
a=getNodeSet(doc.body,path="//em")
doc.body$div
doc.body[[2]]
doc.body[[1]]
class(doc)
doc.head = doc$children$html[[1]]
doc.body = doc$children$html[[2]]
a=getNodeSet(doc.body,path="//p")
xmlValue(doc.head)
xmlValue(doc.body)
xmlChildren(doc.body)
xmlChildren(doc.body)[[1]]
xmlChildren(doc.body)[[2]]
a=getNodeSet(doc.body,path="//p")
a=getNodeSet(doc.body,path="//p")
xmlValue(doc.head)
xmlValue(doc.body)
xmlRoot(doc)
doc
xmlRoot(doc)
removeNodes(doc.body[names(doc.body)=="table"])
names(doc.body)
doc.body
doc = htmlTreeParse(link,encoding = "UTF-8")
r <- xmlRoot(doc)
names(r)
r <- xmlRoot(doc.body)
r[2]
r[1]
names(doc.body)
doc = htmlParse(link,encoding = "UTF-8")
doc.head = doc$children$html[[1]]
doc
doc[1]
doc = htmlTreeParse(link,encoding = "UTF-8")
doc = htmlTreeParse(link,encoding = "UTF-8")
doc.head = doc$children$html[[1]]
doc.body = doc$children$html[[2]]
xmlAttr(doc.body)
xmlAttrs(doc.body)
xmlAttrs(doc)
a=getNodeSet(doc,path="//p")
link = "http://anson.ucdavis.edu/~mueller/cveng13.html"
doc = htmlTreeParse(link,encoding = "UTF-8")
doc.head = doc$children$html[[1]]
doc.body = doc$children$html[[2]]
a=getNodeSet(doc,path="//p")
library(RCurl)
library(XML)
link = "http://anson.ucdavis.edu/~mueller/cveng13.html"
doc = htmlTreeParse(link,encoding = "UTF-8")
doc.head = doc$children$html[[1]]
doc.body = doc$children$html[[2]]
a=getNodeSet(doc,path="//p")
