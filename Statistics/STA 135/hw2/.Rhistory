t2_stat <- function(dat, mu0)
{ X <- as.matrix(dat)
n <- nrow(X)
Xbar<- colMeans(X)
d <- (Xbar - mu0)
n * t(d) %*%solve(cov(X)) %*% d
}
critical_value <- function(n,p, alpha)
{((n - 1)*p / (n - p)) * qf(p = 1 - alpha, df1 = p, df2 = n - p) }
library(readr)
e5_10 <- read_delim("~/Google Drive/Undergraduate/Junior & Senior/Winter 2017/STA 135/hw2/e5_10.txt",
" ", escape_double = FALSE, trim_ws = TRUE)
View(e5_10)
x = as.matrix(e5_10)
x
t2_stat <- function(dat, mu0)
{ X <- as.matrix(dat)
n <- nrow(X)
Xbar<- colMeans(X)
d <- (Xbar - mu0)
n * t(d) %*%solve(cov(X)) %*% d
}
critical_value <- function(n,p, alpha)
{((n - 1)*p / (n - p)) * qf(p = 1 - alpha, df1 = p, df2 = n - p) }
x
a = c(-1,1,0,0)
cif(a,x,0.05)
cif <- function(a, dat, alpha,
method = c("T2", "Bonf"), m = NULL)
{
X <- as.matrix(dat)
Xbar <- colMeans(X)
n <- nrow(X)
if (method == "T2")
{
p <- ncol(X)
crit <- critical_value(n, p, alpha)
me <- sqrt(crit*(t(a) %*% cov(X) %*% a ) / n)
}
else if (method == "Bonf")
{
crit <- qt(p = 1 - (alpha/(2*m)), df = n - 1)
me <- crit*sqrt((t(a) %*% cov(X) %*% a ) / n)
}
center <- a %*% Xbar
c(lower = center - me, upper = center + me)
}
cif(a,x,0.05,'T2')
a
x = as.matrix(e5_10)
a = c(-1,1,0,0)
cif(a,x,0.05,'T2')
x
a = cbind(x[,2]-x[,1],x[,4]-x[,3])
a
install.packages("ellipse")
library(ellipse)
ci_ellipse <- function(pw, dat, alpha, mu0) {
X <- as.matrix(dat); X <- X[,pw];
Xbar <- colMeans(X)
crit <- critical_value(n = nrow(X), p = ncol(X),
alpha = alpha)
ell_points <- ellipse(x = cov(X), centre = Xbar,
t = sqrt(crit/n))
plot(ell_points,
type = "l",
main = "Scatter plot of data with T2 confidence ellipse",
ylim = c(min(X[,2]), max(X[,2])),
xlim  = c(min(X[,1]), max(X[,1])))
#center of ellipse
points(Xbar[1], Xbar[2], pch = 19)
#proposed mu0
points(mu0[1], mu0[2], pch = "*", cex = 3)
#data
points(X[,1], X[,2], pch = '+')
}
ci_ellipse(c(1,2),a,0.05,c(16,4))
a
library(ellipse)
ci_ellipse(c(1,2),a,0.05,c(16,4))
n = nrow(X)
t2_stat <- function(dat, mu0)
{ X <- as.matrix(dat)
n <- nrow(X)
Xbar<- colMeans(X)
d <- (Xbar - mu0)
n * t(d) %*%solve(cov(X)) %*% d
}
critical_value <- function(n,p, alpha)
{((n - 1)*p / (n - p)) * qf(p = 1 - alpha, df1 = p, df2 = n - p) }
cif <- function(a, dat, alpha,
method = c("T2", "Bonf"), m = NULL)
{
X <- as.matrix(dat)
Xbar <- colMeans(X)
n <- nrow(X)
if (method == "T2")
{
p <- ncol(X)
crit <- critical_value(n, p, alpha)
me <- sqrt(crit*(t(a) %*% cov(X) %*% a ) / n)
}
else if (method == "Bonf")
{
crit <- qt(p = 1 - (alpha/(2*m)), df = n - 1)
me <- crit*sqrt((t(a) %*% cov(X) %*% a ) / n)
}
center <- a %*% Xbar
c(lower = center - me, upper = center + me)
}
library(ellipse)
ci_ellipse <- function(pw, dat, alpha, mu0) {
X <- as.matrix(dat); X <- X[,pw];
Xbar <- colMeans(X)
crit <- critical_value(n = nrow(X), p = ncol(X),
alpha = alpha)
ell_points <- ellipse(x = cov(X), centre = Xbar,
t = sqrt(crit/n))
plot(ell_points,
type = "l",
main = "Scatter plot of data with T2 confidence ellipse",
ylim = c(min(X[,2]), max(X[,2])),
xlim  = c(min(X[,1]), max(X[,1])))
#center of ellipse
points(Xbar[1], Xbar[2], pch = 19)
#proposed mu0
points(mu0[1], mu0[2], pch = "*", cex = 3)
#data
points(X[,1], X[,2], pch = '+')
}
ci_ellipse(c(1,2),a,0.05,c(16,4))
ci_ellipse(c(1,2),a,0.05
)
x
a
n=7
ci_ellipse(c(1,2),a,0.05,c(16,4))
