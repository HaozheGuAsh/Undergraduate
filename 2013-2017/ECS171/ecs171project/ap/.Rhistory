{
model_ci = rbind(model_ci,c(exp(coef[i,1]-1.96*coef[i,2]),exp(coef[i,1]+1.96*coef[i,2])))
}
rownames(model_ci) = rownames(coef)[6:10]
colnames(model_ci) = c("CI_lower","CI_higher")
model_ci
coef
load("~/Downloads/NHANES.Rdata")
View(NHANES)
load("~/Desktop/Google 云端硬盘/Undergraduate/Junior & Senior/Fall 2016/STA 141/Sta_141_HW2.R")
sapply(NHANES,function(var) sum(is.na(var)))
library(vcd)
install.packages("vcd")
library(vcd)
version()
R.version
require(devtools)
install_github('andreacirilloac/updateR')
install.packages("devtools")
install_github('andreacirilloac/updateR')
require(devtools)
install_github('andreacirilloac/updateR')
updateR(admin_password = "os_admin_user_password")
library(updateR)
updateR(admin_password = "os_admin_user_password")
updateR(admin_password = "ash940926")
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR()
install.packages('devtools') #assuming it is not already installed
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
updateR(admin_password = 'Admin user password')
install.packages('devtools') #assuming it is not already installed
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
updateR(admin_password = 'ash940926')
install.packages("devtools")
updateR()
library(updateR)
admin_password = "ash940926")
updateR(admin_password = "ash940926")
setInternet2(TRUE)
install.package("download")
library(download)
install.packages("downloader")
updateR(admin_password = "ash940926")
download.file(url,filename)
library(downloaded)
library(downloader)
updateR(admin_password = "ash940926")
library(vcd)
attach(NHANES)
Ed = factor(Ed,levels = c(0,1), labels = c("no college edu","college edu"))
Race = factor(Race,level = c(0,1), labels = c("Caucasian","non-Caucasian"))
mosaic(NHANES, shade = TRUE, legend = TRUE)
library(vcd)
load("NHANES.Rdata")
attach(NHANES)
attach(NHANES)
#check null condition
sapply(NHANES,function(var) sum(is.na(var)))
#make levels more infomative
Ed = factor(Ed,levels = c(0,1), labels = c("no college edu","college edu"))
Race = factor(Race,level = c(0,1), labels = c("Caucasian","non-Caucasian"))
#Q1 Relation between categorical  Smoke Ed Race Sex
mosaic(NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Smoke + Sex + Ed + Race, data = NHANES, shade = TRUE, legend = TRUE)
NHANES$Ed = factor(Ed,levels = c(0,1), labels = c("no college edu","college edu"))
NHANES$Race = factor(Race,level = c(0,1), labels = c("Caucasian","non-Caucasian"))
mosaic(~ Smoke + Sex + Ed + Race, data = NHANES, shade = TRUE, legend = TRUE)
View(NHANES)
attach(NHANES)
sapply(NHANES,function(var) sum(is.na(var)))
View(NHANES)
load("~/Downloads/NHANES.Rdata")
load("~/Downloads/NHANES.Rdata")
attach(NHANES)
View(NHANES)
Ed = factor(Ed,levels = c(0,1), labels = c("no college edu","college edu"))
Ed
library(vcd)
load("~/Downloads/NHANES.Rdata")
attach(NHANES)
Ed = factor(Ed,levels = c(0,1), labels = c("no college edu","college edu"))
Ed
load("~/Downloads/NHANES.Rdata")
attach(NHANES)
Ed
View(NHANES)
Ed[1]
library(vcd)
load("~/Downloads/NHANES.Rdata")
attach(NHANES)
Ed[1]
NHANES$Race = factor(Race,level = c(0,1), labels = c("Caucasian","non-Caucasian"))
Race[1]
View(NHANES)
NHANES$Ed = factor(Ed,levels = c(0,1), labels = c("no college edu","college edu"))
NHANES$Race = factor(Race,level = c(0,1), labels = c("Caucasian","non-Caucasian"))
sapply(NHANES,function(var) sum(is.na(var)))
mosaic(~ Smoke + Sex + Ed + Race, data = NHANES, shade = TRUE, legend = TRUE)
NHANES$Ed = factor(Ed,levels = c(0,1), labels = c("non-college","college"))
NHANES$Race = factor(Race,level = c(0,1), labels = c("Caucasian","non-Caucasian"))
#Q1 Relation between categorical  Smoke Ed Race Sex
mosaic(~ Smoke + Sex + Ed + Race, data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Smoke + Sex + Ed , data = NHANES, shade = TRUE, legend = TRUE)
, d
mosaic(~ Smoke + Sex  , data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Smoke + Sex + Ed + Race, data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Smoke + Race, data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Smoke + Sex + Ed + Race, data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Smoke + Sex , data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Smoke + Sex , data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Smoke + Sex + Ed + Race, data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Smoke + Sex , data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Smoke + Cancer.Incidence , data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Cancer.Incidence+ Sex , data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Cancer.Incidence+ Sex +Smoke, data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Smoke + Cancer.Incidence , data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Smoke+ Sex +Cancer.Incidence, data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Cancer.Incidence+ Sex +Smoke, data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Cancer.Incidence+ Smoke+Sex,data=NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Smoke + Sex , data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Cancer.Incidence+ Smoke+Sex,data=NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Cancer.Incidence+Sex,data=NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Cancer.Incidence+Ed,data=NHANES, shade = TRUE, legend = TRUE)
mosaic(~  Cancer.Incidence +Smoke, data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Cancer.Incidence+Race,data=NHANES, shade = TRUE, legend = TRUE)
mosaic(~  Cancer.Incidence +Smoke, data = NHANES, shade = TRUE, legend = TRUE)+
mosaic(~ Cancer.Incidence+Sex,data=NHANES, shade = TRUE, legend = TRUE)
par(mfrow = c(2,2))
mosaic(~  Cancer.Incidence +Smoke, data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Cancer.Incidence+Sex,data=NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Cancer.Incidence+Ed,data=NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Cancer.Incidence+Race,data=NHANES, shade = TRUE, legend = TRUE)
par(mfrow = c(2,2))
mosaic(~  Cancer.Incidence +Smoke, data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Cancer.Incidence+Sex,data=NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Cancer.Incidence+Ed,data=NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Cancer.Incidence+Race,data=NHANES, shade = TRUE, legend = TRUE)
par(mfrow = c(1,1))
par(mfrow = c(2,2))
mosaic(~  Cancer.Incidence +Smoke, data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Cancer.Incidence+Sex,data=NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Smoke + Sex , data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Ed + Sex , data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Smoke + Race , data = NHANES, shade = TRUE, legend = TRUE)
mosaic(~ Ed + Race , data = NHANES, shade = TRUE, legend = TRUE)
filter(NHANES,Race =="Caucasian"&Ed=="college")
nrow(filter(NHANES,Race =="Caucasian"&Ed=="college"))
nrow(filter(NHANES,Race =="Caucasian"&Ed=="non-college"))
nrow(filter(NHANES,Race =="non-Caucasian"&Ed=="non-college"))
nrow(filter(NHANES,Race =="non-Caucasian"&Ed=="college"))
install.package("rgl")
install.packages("rgl")
library(rgl)
z = 2 * volcano # Exaggerate the relief of a volcano surface (data volcano is part of rgl package)
x =10 * (1:nrow(z)) # 10 meter spacing (S to N)
y = 10 * (1:ncol(z)) # 10 meter spacing (E to W)
persp3d(x, y, z, col = "green3", aspect = "iso”) # perspective plot of surface z on the grid of x and y
)
z = 2 * volcano
x =10 * (1:nrow(z))
y = 10 * (1:ncol(z))
persp3d(x, y, z, col = "green3", aspect = "iso”)
)
run
plot3d(wt, disp, mpg, col="red", size=5)
persp3d(x, y, z, col = "green3", aspect = "iso”)
load("~/Desktop/Google 云端硬盘/sta141_test.R")
0.509+0.513+0.676+0.445
car = data.frame(expand.grid( injury= factor(c("Nonfatal","fatal")),eject = factor(c("yes","no")), safety =
factor(c("seltbelt", "none"))) , count = c(1105,14,411111,483,4624,497,157342,1008))
model1 = glm(count~.^2,data = car,family = poisson)
model11 = loglm(count~.^2,data = car,param=T)
summary(model1)
injury = data.frame(expand.grid( injury= factor(c("No","Yes")),seatbelt = factor(c("no","yes")), location =
factor(c("urban", "rural")),gender = factor(c("female","male"))) , count = c(7287,996,11587,759,3246,973,6134,757,10381,812,10969,380,6123,1084,6693,513))
injury
car = data.frame(expand.grid( injury= factor(c("Nonfatal","fatal")),eject = factor(c("yes","no")), safety =
factor(c("seltbelt", "none"))) , count = c(1105,14,411111,483,4624,497,157342,1008))
model1 = glm(count~.^2,data = car,family = poisson)
model11 = loglm(count~.^2,data = car,param=T)
summary(model1)
install.packages("warble")
install.packages("warbleR")
install.packages("warbleR")
version()
R
library(ggplot2)
library(ggmap)
library(maps)
library(maptools)
library(sp)
library(rstudioapi)
library(readr)
library(igraph)
this.dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(this.dir)
crime <- read_csv("SearchResults.csv")
dc = get_map("Washington DC",zoom=6,maptype="terrain")
ggmap(dc)
dc = get_map("Washington DC",zoom=12,maptype="terrain")
ggmap(dc)
library(ggplot2)
library(ggmap)
library(maps)
library(maptools)
library(sp)
library(rstudioapi)
library(readr)
library(igraph)
this.dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(this.dir)
crime <- read_csv("SearchResults.csv")
dc = get_map("Washington DC",zoom=10,maptype="terrain")
ggmap(dc)
this.dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(this.dir)
rank <- read_csv("UC_US_News_ranking_2017.txt", col_names = FALSE)
shape = readShapeSpatial("tl_2016_us_state")
states=fortify(shape)
states
View(states)
data(us.cities)
us.cities
which(us.cities$name="Washington")
which(us.cities$name=="Washington")
which(us.cities$name=="WashingtonDC")
View(us.cities)
us.cities[994]
us.cities[994,]
us.cities[944,]
boundry = us.cities[944,]
city.loc = borders('state',size=0.5,col="green")
ggmap(dc)+geom_polygon(aes(group=group), fill=NA, col="blue")
city.loc
library(ggplot2)
library(ggmap)
library(maps)
library(maptools)
library(sp)
library(rstudioapi)
library(readr)
library(igraph)
#library(devtools)
#install_version("ggplot2", version = "2.1.0", repos = "http://cran.us.r-project.org")
this.dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(this.dir)
crime <- read_csv("SearchResults.csv")
dc = get_map("Washington DC",zoom=11,maptype="terrain")
ggmap(dc)+geom_polygon(aes(group=group), fill=NA, col="blue")
ggmap(dc)
houston= get_map("houston, texas", zoom = 11, maptype= "terrain")
ggmap(houston)
data(us.cities) # data on major US cities
big.cities= subset(us.cities, pop > 500000) # choose cities with population at least 0.5 million
city.loc= ggplot(big.cities,aes(long,lat)) # borders of states using borders( ) function in ggplot2
city.loc= city.loc+ borders("state",size=0.5,col="green") # plot cities with size determined by population
city.loc+ geom_point(aes(size=pop,color=pop),alpha=I(1/3)) # add the names of the cities as labels
data(us.cities) # data on major US cities
big.cities= subset(us.cities, name=="WASHINGTON DC") # choose cities with population at least 0.5 million
big.cities
city.loc= ggplot(big.cities,aes(long,lat)) # borders of states using borders( ) function in ggplot2
city.loc= city.loc+ borders("state",size=0.5,col="green") # plot cities with size determined by population
city.loc+ geom_point(aes(size=pop,color=pop),alpha=I(1/3)) # add the names of the cities as labels
View(crime)
library(rstudioapi)
this.dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(this.dir)
library(rstudioapi)
this.dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(this.dir)
car = data.frame(expand.grid( injury= factor(c("Nonfatal","fatal")),eject = factor(c("yes","no")), safety =
factor(c("seltbelt", "none"))) , count = c(1105,14,411111,483,4624,497,157342,1008))
model1 = glm(count~.^2,data = car,family = poisson)
library(readr)
sta138_5 <- read_csv("~/Desktop/Google 云端硬盘/Undergraduate/Junior & Senior/Fall 2016/STA 138/sta138_5.3",
col_names = FALSE)
View(sta138_5)
basketball<- read_csv("sta138_5.3",col_names = FALSE)
colnames(basketball) = c("WL","AST")
a=basketball$WL[1]
a
grepl("\\S{1}",a)
grepl("\\S{1}",a,value = T)
grep("\\S{1}",a,value = T)
b = a[1]
b
b = substr(1)
b = substr(1,1)
b = substr(a,1,1)
b
sapply(1:nrow(basketball),function(i){basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
basketball$WL
str_sub()
library(stringr)
a = "df"
b = sub("d","f",a)
b
View(basketball)
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i]);
basketball$WL[i] = sub("0","L",basketball$WL[i]);
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i]);
basketball$WL[i] = sub("0","L",basketball$WL[i]);
basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i]);
basketball$WL[i] = sub("0","L",basketball$WL[i]);
basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
basketball<- read_csv("sta138_5.3",col_names = FALSE)
colnames(basketball) = c("WL","AST")
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i]);
basketball$WL[i] = sub("0","L",basketball$WL[i]);
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i]);
basketball$WL[i] = sub("0","L",basketball$WL[i]);
basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i])
basketball$WL[i] = sub("0","L",basketball$WL[i])
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i])
basketball$WL[i] = sub("0","L",basketball$WL[i])
basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i])
basketball$WL[i] = sub("0","L",basketball$WL[i])
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i])
basketball$WL[i] = sub("0","L",basketball$WL[i])
basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
basketball<- read_csv("sta138_5.3",col_names = FALSE)
colnames(basketball) = c("WL","AST")
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i])
basketball$WL[i] = sub("0","L",basketball$WL[i])
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i])
basketball$WL[i] = sub("0","L",basketball$WL[i])
basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i]);
basketball$WL[i] = sub("0","L",basketball$WL[i]);
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i]);
basketball$WL[i] = sub("0","L",basketball$WL[i]);
basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
basketball<- read_csv("sta138_5.3",col_names = FALSE)
colnames(basketball) = c("WL","AST")
basketball<- read_csv("sta138_5.3",col_names = FALSE)
colnames(basketball) = c("WL","AST")
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i]);basketball$WL[i] = sub("0","L",basketball$WL[i]);basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i]);
basketball$WL[i] = sub("0","L",basketball$WL[i]);
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i]);
basketball$WL[i] = sub("0","L",basketball$WL[i]);
basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i]);
+basketball$WL[i] = sub("0","L",basketball$WL[i]);
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i]);
+basketball$WL[i] = sub("0","L",basketball$WL[i]);
+basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i]);
+ basketball$WL[i] = sub("0","L",basketball$WL[i]);
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i]);
+ basketball$WL[i] = sub("0","L",basketball$WL[i]);
+ basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
basketball<- read_csv("sta138_5.3",col_names = FALSE)
colnames(basketball) = c("WL","AST")
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] = sub("1","W",basketball$WL[i]); basketball$WL[i] = sub("0","L",basketball$WL[i]);basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
View(basketball)
basketball<- read_csv("sta138_5.3",col_names = FALSE)
colnames(basketball) = c("WL","AST")
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] <<- sub("1","W",basketball$WL[i]); basketball$WL[i] <<- sub("0","L",basketball$WL[i]);basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
View(basketball)
basketball$WL[1] <<- sub("1","W",basketball$WL[1])
basketball<- read_csv("sta138_5.3",col_names = FALSE)
colnames(basketball) = c("WL","AST")
basketball<- read_csv("sta138_5.3",col_names = FALSE)
basketball$WL[1] <<- sub("1","W",basketball$WL[1])
basketball<- read_csv("sta138_5.3",col_names = FALSE)
colnames(basketball) = c("WL","AST")
basketball$WL[1] <<- sub("1","W",basketball$WL[1])
basketball$WL
i=1
basketball$WL[i]
sub("1","W",basketball$WL[i])
View(basketball)
basketball<- read_csv("sta138_5.3",col_names = FALSE)
colnames(basketball) = c("WL","AST")
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] <<- sub("W","1",basketball$WL[i]); basketball$WL[i] <<- sub("L","0",basketball$WL[i]);basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
View(basketball)
remission=data.frame(LI=c(seq(8,28,by=2),32,34,38),rem=c(0,0,0,0,0,1,2,1,0,1,1,0,1,2),notrem=c(2,2,3,3,3,0,1,1,1,0,0,1,0,1))
cbind(remission$rem,remission$notrem)
model1=glm(WL~AST,data=basketball,family=binomial)
basketball$AST
basketball$WL
basketball$WL = as.numeric(basketball$WL)
model1=glm(WL~AST,data=basketball,family=binomial)
summary(model1)
View(basketball)
basketball<- read_csv("sta138_5.3_2",col_names = FALSE)
colnames(basketball) = c("WL","AST")
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] <<- sub("W","1",basketball$WL[i]); basketball$WL[i] <<- sub("L","0",basketball$WL[i]);basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
View(basketball)
basketball<- read_csv("sta138_5.3_2",col_names = FALSE)
View(basketball)
colnames(basketball) = c("WL","AST")
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] <<- sub("W","1",basketball$WL[i]); basketball$WL[i] <<- sub("L","0",basketball$WL[i]);basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
basketball$WL = as.numeric(basketball$WL)
model1=glm(WL~AST,data=basketball,family=binomial)
summary(model1)
basketball<- read_csv("sta138_5.3",col_names = FALSE)
basketball<- read_csv("sta138_5.3",col_names = FALSE)
basketball<- read_csv("sta138_5.3",col_names = FALSE)
colnames(basketball) = c("WL","AST")
dummy=sapply(1:nrow(basketball),function(i){basketball$WL[i] <<- sub("W","1",basketball$WL[i]); basketball$WL[i] <<- sub("L","0",basketball$WL[i]);basketball$WL[i]<<-substr(basketball$WL[i],1,1)})
basketball$WL = as.numeric(basketball$WL)
model1=glm(WL~AST,data=basketball,family=binomial)
summary(model1)
model1$coefficients[1]
model1$coefficients[1]*2
b0 = as.numeric(model1$coefficients[1]);b1=as.numeric(model1$coefficients[2])
b0
b1
(exp(b0+b1*3))/(1+exp(bo+b1*3))
py = c((exp(b0+b1*3))/(1+exp(b0+b1*3)),1)
py = c((exp(b0+b1*3))/(1+exp(b0+b1*3)),(exp(b0+b1*24))/(1+exp(b0+b1*24)))
py
zb1=0.29378/0.08325
zb1
b1ci = c(b1-1.96*0.08325,b1+1.96*0.08325)
b1ci
b1vi[1]
b1ci[1]
deltaodd = c(exp(b1ci[1]),exp(b1ci[2]))
deltaodd
disaster = data.frame(Temp = c(66,70,69,68,67,72,73,70,57,63,70,78,67,53,67,75,70,81,76,79,75,76,58)，
TD=c(0,1,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0,1))
disaster = data.frame(Temp = c(66,70,69,68,67,72,73,70,57,63,70,78,67,53,67,75,70,81,76,79,75,76,58),
TD=c(0,1,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0,1))
disaster = data.frame(Temp = c(66,70,69,68,67,72,73,70,57,63,70,78,67,53,67,75,70,81,76,79,75,76,58),
TD=c(0,1,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0,1))
disaster
model2=glm(TD~Temp,data=disaster,family=binomial)
summary(model1)
summary(model2)
estprob=function(x){
z=exp(b0+b1*x)/(1+exp(b0+b1*x))
return(z)
}
b0=coef(model2)[1]
b1=coef(model2)[2]
z=exp(b0+b1*x)/(1+exp(b0+b1*x))
return(z)
estprob=function(x){
z=exp(b0+b1*x)/(1+exp(b0+b1*x))
return(z)
}
estprob=function(x){
z=exp(b0+b1*x)/(1+exp(b0+b1*x))
return(z)
}
min(disaster$Temp)
max(disaster$Temp)
curve(estprob,from=min(disaster$Temp),to=max(disaster$Temp),xlim=c(50,85),ylim=c(0,1),ylab="probability",xlab="Temp")
points(x = c(disaster$TD,disaster$Temp))
curve(estprob,from=min(disaster$Temp),to=max(disaster$Temp),xlim=c(50,85),ylim=c(0,1),ylab="probability",xlab="Temp")
prop_raw=remission$rem/(remission$rem+remission$notrem)
points(disaster$TD,disaster$Temp)
curve(estprob,from=min(disaster$Temp),to=max(disaster$Temp),xlim=c(50,85),ylim=c(0,1),ylab="probability",xlab="Temp")
points(disaster$TD,disaster$Temp)
points(disaster$TD,disaster$Temp,pch=10)
points(disaster$Temp,disaster$TD,pch=10)
curve(estprob,from=min(disaster$Temp),to=max(disaster$Temp),xlim=c(50,85),ylim=c(0,1),ylab="probability",xlab="Temp")
points(disaster$Temp,disaster$TD,pch=10)
points(disaster$Temp,disaster$TD,pch=3)
curve(estprob,from=min(disaster$Temp),to=max(disaster$Temp),xlim=c(50,85),ylim=c(0,1),ylab="probability",xlab="Temp")
points(disaster$Temp,disaster$TD,pch=3)
summary(model2)
preddis=predict(model2,data.frame(Temp=c(31)),type="response")
preddis
b1ci = c(b1-1.96*0.01082,b1+1.96*0.01082)
deltaodd = c(exp(b1ci[1]),exp(b1ci[2]))
b1ci
b0=coef(model2)[1]
b1=coef(model2)[2]
b1ci = c(b1-1.96*0.01082,b1+1.96*0.01082)
deltaodd = c(exp(b1ci[1]),exp(b1ci[2]))
b1ci
b1ci = c(b1-1.96*0.1082,b1+1.96*0.1082)
deltaodd = c(exp(b1ci[1]),exp(b1ci[2]))
b1ci
deltaodd
exp(-0.44)
exp(-0.01)
exp(-0.99)
exp(-1.5)
exp(-3)
exp(1)
exp(4)
x=1:100
curve(exp(x),from =0,to=100,xlim=c(0,100),ylim=c(0,100))
curve(exp(x),from =0,to=100,xlim=c(-100,100),ylim=c(0,100))
curve(exp(x),from =0,to=100,xlim=c(-100,100),ylim=c(-100,100))
library(warbleR)
library(readr)
setwd("C:/Users/Ash/Desktop/ap/")
setwd("~/Desktop/Google 云端硬盘/ecs171project/ap/")
file.remove("manualoc_output.csv")
manualoc(flim = c(0,0.28))
a <- data.frame(read_csv("manualoc_output.csv"))
result<- specan(X =a ,threshold = 15,bp = c(0, 0.28))
View(result)
curve(estprob,from=min(disaster$Temp),to=max(disaster$Temp),xlim=c(50,85),ylim=c(0,1),ylab="probability",xlab="Temp")
points(disaster$Temp,disaster$TD,pch=3)
